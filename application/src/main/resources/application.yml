#spring:
#  application:
#    name: orders-service
#  jpa:
#    hibernate:
#      ddl-auto: update
#    show-sql: true
#  datasource:
#    url: jdbc:postgresql://localhost:5434/db_orders?useSSL=false
#    username: fazt3
#    password: 123456
#  kafka:
#    bootstrap-servers: localhost:9092,localhost:9094,localhost:9096
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#      acks: all
#      properties:
#        delivery.timeout.ms: 120000
#        linger.ms: 0
#        request.timeout.ms: 30000
#        max.in.flight.requests.per.connection: 5
#        enable.idempotence: true
#    consumer:
#        group-id: orders-ms-angieBraids
#        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#        value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#        properties:
#            spring.json.trusted.packages: 'com.braidsbeautybyangie.*'
#
#orders:
#  events:
#    topic:
#      name: orders-events
#  commands:
#    topic:
#      name: orders-commands
#products:
#  commands:
#    topic:
#      name: products-commands
#  events:
#    topic:
#      name: products-events
#payments:
#  commands:
#    topic:
#      name: payments-commands
#  events:
#    topic:
#      name: payments-events
#services:
#  events:
#    topic:
#      name: services-events
#  commands:
#    topic:
#      name: services-commands
#
#
#server:
#  port: 0
#
#eureka:
#  instance:
#    instance-id: ${spring.application.name}:${random.value}
#
#swagger:
#  server:
#    url: http://localhost:${eureka.instance.instance-id}
#springdoc:
#  api-docs:
#    enabled: true
#  swagger-ui:
#    csrf:
#      enabled: true
#    path: /swagger-ui.html
#